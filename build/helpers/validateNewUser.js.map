{"version":3,"sources":["../../server/helpers/validateNewUser.js"],"names":["validateNewUser","req","res","test","body","email","status","send","error","trim","username","password","phone"],"mappings":";;;;;AAAA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACpC;AACA,MAAI,CAAC,gDAAgDC,IAAhD,CAAqDF,IAAIG,IAAJ,CAASC,KAA9D,CAAL,EAA2E;AACzE,WAAOH,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,eAAT,EAA0BF,QAAQ,GAAlC,EADC,CAAP;AAED;;AAED,MAAI,CAACL,IAAIG,IAAJ,CAASC,KAAV,IAAmBJ,IAAIG,IAAJ,CAASC,KAAT,CAAeI,IAAf,OAA0B,EAAjD,EAAqD;AACnD,WAAOP,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,uBAAT,EAAkCF,QAAQ,GAA1C,EADC,CAAP;AAED;;AAED,MAAI,CAACL,IAAIG,IAAJ,CAASM,QAAV,IAAsBT,IAAIG,IAAJ,CAASM,QAAT,CAAkBD,IAAlB,OAA6B,EAAvD,EAA2D;AACzD,WAAOP,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,0BAAT,EAAqCF,QAAQ,GAA7C,EADC,CAAP;AAED;;AAED,MAAI,CAACL,IAAIG,IAAJ,CAASO,QAAV,IAAsBV,IAAIG,IAAJ,CAASO,QAAT,CAAkBF,IAAlB,OAA6B,EAAvD,EAA2D;AACzD,WAAOP,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,0BAAT,EAAqCF,QAAQ,GAA7C,EADC,CAAP;AAED;;AAED,MAAI,CAACL,IAAIG,IAAJ,CAASQ,KAAV,IAAmBX,IAAIG,IAAJ,CAASQ,KAAT,CAAeH,IAAf,OAA0B,EAAjD,EAAqD;AACnD,WAAOP,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,uBAAT,EAAkCF,QAAQ,GAA1C,EADC,CAAP;AAED;;AAED,MAAI,CAACL,IAAIG,IAAJ,CAASO,QAAV,IAAsBV,IAAIG,IAAJ,CAASO,QAAT,CAAkBF,IAAlB,OAA6B,EAAvD,EAA2D;AACzD,WAAOP,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,0BAAT,EAAqCF,QAAQ,GAA7C,EADC,CAAP;AAED;;AAED,MAAI,CAACL,IAAIG,IAAJ,CAASQ,KAAV,IAAmBX,IAAIG,IAAJ,CAASQ,KAAT,CAAeH,IAAf,OAA0B,EAAjD,EAAqD;AACnD,WAAOP,IAAII,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAAEC,OAAO,uBAAT,EAAkCF,QAAQ,GAA1C,EADC,CAAP;AAED;;AAED,SAAO,OAAP;AACD,CAtCD;;kBAwCeN,e","file":"validateNewUser.js","sourcesContent":["const validateNewUser = (req, res) => {\n  /* eslint-disable no-useless-escape */\n  if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/.test(req.body.email)) {\n    return res.status(400)\n    .send({ error: 'Invalid email', status: 400 });\n  }\n\n  if (!req.body.email || req.body.email.trim() === '') {\n    return res.status(400)\n    .send({ error: 'Email cannot be empty', status: 400 });\n  }\n\n  if (!req.body.username || req.body.username.trim() === '') {\n    return res.status(400)\n    .send({ error: 'Username cannot be empty', status: 400 });\n  }\n\n  if (!req.body.password || req.body.password.trim() === '') {\n    return res.status(400)\n    .send({ error: 'Password cannot be empty', status: 400 });\n  }\n\n  if (!req.body.phone || req.body.phone.trim() === '') {\n    return res.status(400)\n    .send({ error: 'Phone cannot be empty', status: 400 });\n  }\n\n  if (!req.body.password || req.body.password.trim() === '') {\n    return res.status(400)\n    .send({ error: 'Password cannot be empty', status: 400 });\n  }\n\n  if (!req.body.phone || req.body.phone.trim() === '') {\n    return res.status(400)\n    .send({ error: 'Phone cannot be empty', status: 400 });\n  }\n\n  return 'valid';\n};\n\nexport default validateNewUser;\n"]}
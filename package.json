{
  "version": "3.10.10",
  "name": "postit",
  "private": true,
  "engines": {
    "node": "6.11.2",
    "npm": "5.4.2"
  },
  "dependencies": {
    "axios": "~0.12.0",
    "babel-cli": "^6.24.1",
    "babel-core": "^6.17.0",
    "babel-loader": "^6.2.0",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-plugin-react-html-attrs": "^2.0.0",
    "babel-plugin-transform-class-properties": "^6.3.13",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-destructuring": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.24.1",
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "^1.17.2",
    "component-tween": "^1.2.0",
    "css-loader": "^0.28.4",
    "dotenv": "^4.0.0",
    "express": "^4.15.3",
    "extract-text-webpack-plugin": "^2.1.2",
    "file-loader": "^0.11.2",
    "font-loader": "^0.1.2",
    "jest-cli": "^20.0.4",
    "jquery": "^3.2.1",
    "jsonwebtoken": "^7.4.1",
    "materialize-css": "^0.99.0",
    "morgan": "^1.8.2",
    "nexmo": "^2.0.2",
    "node-sass": "^4.5.3",
    "nodemailer": "^4.0.1",
    "pg": "^6.4.0",
    "pg-hstore": "^2.3.2",
    "prop-types": "^15.5.10",
    "raf": "^3.3.2",
    "react": "^15.6.1",
    "react-addons-test-utils": "^15.6.0",
    "react-dom": "^15.6.1",
    "react-redux": "~4.4.5",
    "react-router-dom": "^4.1.2",
    "redux": "^3.7.2",
    "redux-thunk": "^2.2.0",
    "sass-loader": "^6.0.6",
    "scroll-to-element": "^2.0.0",
    "sequelize": "^4.2.1",
    "sequelize-cli": "^2.7.0",
    "style-loader": "^0.18.2",
    "tween": "^0.9.0",
    "twilio": "^3.6.1",
    "webpack": "~2.7.0",
    "whatwg-fetch": "^2.0.3"
  },
  "devDependencies": {
    "axios-mock-adapter": "^1.9.0",
    "babel-jest": "^20.0.3",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "chai": "^4.0.2",
    "chai-http": "^3.0.0",
    "coveralls": "^2.13.1",
    "dotenv": "^4.0.0",
    "enzyme": "^2.9.1",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^15.1.0",
    "eslint-config-airbnb-base": "^11.2.0",
    "eslint-plugin-import": "^2.6.1",
    "eslint-plugin-jsx-a11y": "~5.1.1",
    "eslint-plugin-react": "^7.1.0",
    "istanbul": "^0.4.5",
    "jest": "^20.0.4",
    "mocha": "^3.4.2",
    "mocha-lcov-reporter": "^1.3.0",
    "mock-local-storage": "^1.0.5",
    "nock": "^9.0.22",
    "nodemon": "^1.11.0",
    "nyc": "^11.0.3",
    "react-test-renderer": "^15.6.1",
    "redux-mock-store": "^1.2.3"
  },
  "nyc": {
    "extension": [
      ".jsx",
      ".es6"
    ]
  },
  "jest": {
    "setupTestFrameworkScriptFile": "mock-local-storage",
    "transform": {
      ".*": "<rootDir>/node_modules/babel-jest"
    },
    "moduleFileExtensions": [
      "jsx",
      "js"
    ],
    "unmockedModulePathPatterns": [
      "react"
    ],
    "collectCoverage": true
  },
  "quokka": {
    "babel": true
  },
  "scripts": {
    "start:dev": "node ./node_modules/webpack-dev-server/bin/webpack-dev-server.js -w --progress --colors --inline --content-base client/",
    "dev": "webpack-dev-server --content-base client --inline --hot",
    "test_": "nyc mocha --compilers js:babel-core/register --timeout 10000",
    "test-dev": "mocha --compilers js:babel-core/register --timeout 10000",
    "exec": "nodemon ./server/bin/www --exec babel-node ./server/app",
    "start": "node ./build/bin/www",
    "start-dev": "nodemon ./build/bin/www",
    "coveralls_": "nyc --reporter=lcov --reporter=text-lcov npm run test_",
    "test__": "node_modules/.bin/mocha --compilers js:babel-core/register --reporter spec --slow 50 --timeout 60000",
    "cover": "node_modules/.bin/istanbul cover node_modules/mocha/bin/_mocha -- -u exports --compilers js:babel-register",
    "test": "NODE_ENV=test nyc --reporter=html --reporter=text mocha --compilers js:babel-register",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "coveralls": "nyc --reporter=lcov --reporter=text-lcov npm test",
    "build": "./node_modules/.bin/webpack ./client/js/App.jsx && babel -d ./build ./server -s --copy-files",
    "build-client": "webpack ./client/js/App.jsx -w",
    "build-server": "babel -d ./build ./server -s --copy-files -w",
    "postinstall": "npm run build"
  }
}
